{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/components/category-box.tsx","webpack:///./src/data/projects.ts","webpack:///./src/pages/projects.tsx"],"names":["ProjectContainer","styled","div","Title","h2","Description","p","CategoryContainer","Category","span","Project","title","description","categories","map","category","key","CategoryBoxContainer","section","CategoryBoxHeader","h4","CategoryRow","props","button","CategoryBox","filterProjects","handleClick","event","currentTarget","innerHTML","innerText","style","justifyContent","Array","from","onClick","projectData","getCategories","project","Set","ProjectHeader","h1","ProjectDescription","h3","Projects","useState","projects","setProjects","filteredProjects","matchesCategory","push","projectInfo"],"mappings":"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","file":"component---src-pages-projects-tsx-4fa0c52c5290b50269eb.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ProjectProps {\r\n    title: string;\r\n    description: string;\r\n    categories: Array<string>;\r\n}\r\n\r\nconst ProjectContainer = styled.div`\r\n    padding: 5px;\r\n    margin: 10px 15px;\r\n    min-height: 150px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    flex: 0 1 calc(100% / 2);\r\n    box-shadow: 2px 2px #d3d3d3;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 3px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    text-align: center;\r\n    width: 100%;\r\n    padding: 5px;\r\n    font-size: 0.8rem;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    padding: 0 auto;\r\n    font-size: 0.6rem;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    padding-bottom: 10px;\r\n    margin: auto auto 0;\r\n`;\r\n\r\nconst Category = styled.span`\r\n    border: 1px solid #a1a1a1;\r\n    font-size: 0.6rem;\r\n    margin: 2px 6px;\r\n    padding: 2px 8px;\r\n`;\r\n\r\nconst Project: FunctionComponent<ProjectProps> = ({\r\n    title,\r\n    description,\r\n    categories,\r\n}) => {\r\n    return (\r\n        <ProjectContainer>\r\n            <Title>{title}</Title>\r\n            <Description>{description}</Description>\r\n            <CategoryContainer>\r\n                {categories.map((category) => (\r\n                    <Category key={category}>{category}</Category>\r\n                ))}\r\n            </CategoryContainer>\r\n        </ProjectContainer>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CategoryBoxContainer = styled.section`\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst CategoryBoxHeader = styled.h4`\r\n    font-weight: normal;\r\n    font-size: 0.9rem;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        text-align: center;\r\n        font-size 0.8rem;\r\n    }\r\n`;\r\n\r\nconst CategoryRow = styled((props) => <div {...props}></div>)`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\ninterface CategoryBoxProps {\r\n    categories: Array<string> | null;\r\n    filterProjects: (category: string | null) => void;\r\n}\r\n\r\nconst Category = styled.button`\r\n    cursor: pointer;\r\n    border: 1px solid #a1a1a1;\r\n    font-size: 0.6rem;\r\n    margin: 4px 3px;\r\n    padding: 2px 8px;\r\n`;\r\n\r\nconst CategoryBox: FunctionComponent<CategoryBoxProps> = ({\r\n    categories,\r\n    filterProjects,\r\n}) => {\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (event.currentTarget.innerHTML === 'Clear Selection') {\r\n            filterProjects(null);\r\n        } else {\r\n            filterProjects(event.currentTarget.innerText);\r\n        }\r\n    };\r\n\r\n    if (categories === null) return null;\r\n\r\n    return (\r\n        <CategoryBoxContainer>\r\n            <CategoryBoxHeader>\r\n                Select a category to sort projects:\r\n            </CategoryBoxHeader>\r\n            <CategoryRow style={{ justifyContent: 'space-around' }}>\r\n                {Array.from(categories).map((category) => (\r\n                    <Category onClick={handleClick}>{category}</Category>\r\n                ))}\r\n            </CategoryRow>\r\n            <CategoryRow style={{ justifyContent: 'flex-end' }}>\r\n                <Category onClick={handleClick}>Clear Selection</Category>\r\n            </CategoryRow>\r\n        </CategoryBoxContainer>\r\n    );\r\n};\r\n\r\nexport default CategoryBox;\r\n","export const projectData = [\r\n    {\r\n        title: 'SoundTube',\r\n        description: `SoundTube is a social media and music sharing website.`,\r\n        categories: [\r\n            'HTML',\r\n            'CSS',\r\n            'JavaScript',\r\n            'Express',\r\n            'JSON',\r\n            'MySQL',\r\n            'Node',\r\n        ],\r\n    },\r\n    {\r\n        title: 'TypeScript MERN To Do Application',\r\n        description: `A to do application created in Typescript using the MERN Stack.`,\r\n        categories: [\r\n            'HTML',\r\n            'CSS',\r\n            'JavaScript',\r\n            'TypeScript',\r\n            'MongoDB',\r\n            'Express',\r\n            'React',\r\n            'Node',\r\n        ],\r\n    },\r\n    {\r\n        title: 'World of Tanks TypeScript API Wrapper (WIP)',\r\n        description: `A wrapper for WarGaming's API in TypeScript`,\r\n        categories: ['TypeScript', 'Node'],\r\n    },\r\n    {\r\n        title: 'Docstring Generator',\r\n        description: `A Visual Studio Code extension for generating docstrings.`,\r\n        categories: ['TypeScript', 'Node'],\r\n    },\r\n    {\r\n        title: 'Manga Downloader',\r\n        description: `Search for and download the latest manga through command line.`,\r\n        categories: ['Python'],\r\n    },\r\n    {\r\n        title: 'Bank System',\r\n        description: `A bank GUI that supports basic banking features.`,\r\n        categories: ['Java', 'Netbeans'],\r\n    },\r\n];\r\n\r\nexport const getCategories = () => {\r\n    let categories = [];\r\n\r\n    // Create an array containing every category\r\n    for (const project of projectData) {\r\n        categories = [...categories, ...project.categories];\r\n    }\r\n\r\n    // Remove duplicates and return as array\r\n    return [...new Set(categories)];\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/seo';\r\nimport Layout from '../components/layout';\r\nimport Project from '../components/project';\r\nimport CategoryBox from '../components/category-box';\r\n\r\nimport { projectData, getCategories } from '../data/projects';\r\n\r\nconst ProjectHeader = styled.h1`\r\n    margin: 0 auto 10px;\r\n    padding: 5px;\r\n    overflow: hidden;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\nconst ProjectDescription = styled.h3`\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n    margin: 0 auto 10px;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\nconst ProjectContainer = styled.section`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media screen and (max-width: 720px) {\r\n        margin: 0 auto;\r\n        max-width: 400px;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nconst Projects = () => {\r\n    const [projects, setProjects] = useState(projectData);\r\n\r\n    const filterProjects = (category: string | null) => {\r\n        if (category === null) return setProjects(projectData);\r\n\r\n        const filteredProjects = [];\r\n        projectData.map((project) => {\r\n            let matchesCategory = false;\r\n            for (const projectCategory of project.categories) {\r\n                if (projectCategory === category) matchesCategory = true;\r\n            }\r\n            if (matchesCategory) filteredProjects.push(project);\r\n        });\r\n\r\n        setProjects(filteredProjects);\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO />\r\n            <ProjectHeader>Projects</ProjectHeader>\r\n            <ProjectDescription>\r\n                Here is a list of all the projects I have created.\r\n            </ProjectDescription>\r\n            <CategoryBox\r\n                categories={getCategories()}\r\n                filterProjects={filterProjects}\r\n            />\r\n            <ProjectContainer>\r\n                {projects.map((projectInfo) => (\r\n                    <Project key={projectInfo.title} {...projectInfo} />\r\n                ))}\r\n            </ProjectContainer>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}