{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/components/category-box.tsx","webpack:///./src/data/projects.ts","webpack:///./src/pages/projects.tsx"],"names":["ProjectContainer","styled","div","Title","h2","Description","p","CategoryContainer","Category","span","props","color","Project","title","description","categories","post","onClick","event","navigate","sort","map","category","key","name","CategoryBoxContainer","section","CategoryBoxHeader","h4","CategoryRow","button","CategoryBox","filterProjects","handleClick","currentTarget","innerHTML","innerText","style","justifyContent","projectData","ProjectHeader","h1","ProjectDescription","h3","Projects","useState","projects","setProjects","project","concat","Object","values","reduce","acc","cur","assign","getCategories","fontWeight","filteredProjects","matchesCategory","push","projectInfo"],"mappings":"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","file":"component---src-pages-projects-tsx-a113700c8d9f32158fbb.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { navigate } from 'gatsby';\r\n\r\ninterface CategoryFormat {\r\n    name: string;\r\n    color: string;\r\n}\r\n\r\ninterface ProjectProps {\r\n    title: string;\r\n    description: string;\r\n    categories: Array<CategoryFormat>;\r\n    post: string;\r\n}\r\n\r\nconst ProjectContainer = styled.div`\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    margin: 10px 15px;\r\n    min-height: 150px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    flex: 0 1 calc(100% / 2);\r\n    box-shadow: 2px 2px #d3d3d3;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 6px;\r\n    background: #f2f2f2;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    text-align: center;\r\n    width: 100%;\r\n    padding: 5px;\r\n    font-size: 0.8rem;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    padding: 0 auto;\r\n    font-size: 0.6rem;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    padding-bottom: 10px;\r\n    margin: auto auto 0;\r\n`;\r\n\r\nconst Category = styled.span`\r\n    color: #111111;\r\n    background: ${(props) => props.color};\r\n    border: 1px solid black;\r\n    font-size: 0.6rem;\r\n    margin: 2px 6px;\r\n    padding: 2px 8px;\r\n`;\r\n\r\nconst Project: FunctionComponent<ProjectProps> = ({\r\n    title,\r\n    description,\r\n    categories,\r\n    post,\r\n}) => {\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) =>\r\n        navigate(`/projects/${post}`);\r\n\r\n    return (\r\n        <ProjectContainer onClick={handleClick}>\r\n            <Title>{title}</Title>\r\n            <Description>{description}</Description>\r\n            <CategoryContainer>\r\n                {categories.sort().map((category) => (\r\n                    <Category\r\n                        key={category.name}\r\n                        color={category.color || 'lightgrey'}\r\n                    >\r\n                        {category.name}\r\n                    </Category>\r\n                ))}\r\n            </CategoryContainer>\r\n        </ProjectContainer>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CategoryBoxContainer = styled.section`\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst CategoryBoxHeader = styled.h4`\r\n    font-weight: normal;\r\n    font-size: 0.9rem;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        text-align: center;\r\n        font-size 0.8rem;\r\n    }\r\n`;\r\n\r\nconst CategoryRow = styled((props) => <div {...props}></div>)`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\ninterface CategoryBoxProps {\r\n    categories: Array<{ name: string; color: string }> | null;\r\n    filterProjects: (category: string | null) => void;\r\n}\r\n\r\nconst Category = styled.button`\r\n    cursor: pointer;\r\n    background: #ffffff;\r\n    border: 1px solid ${(props) => props.color};\r\n    font-size: 0.6rem;\r\n    margin: 4px 3px;\r\n    padding: 2px 8px;\r\n`;\r\n\r\nconst CategoryBox: FunctionComponent<CategoryBoxProps> = ({\r\n    categories,\r\n    filterProjects,\r\n}) => {\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (event.currentTarget.innerHTML === 'Clear Selection') {\r\n            filterProjects(null);\r\n        } else {\r\n            filterProjects(event.currentTarget.innerText);\r\n        }\r\n    };\r\n\r\n    if (categories === null) return null;\r\n\r\n    return (\r\n        <CategoryBoxContainer>\r\n            <CategoryBoxHeader>\r\n                Select a category to sort projects:\r\n            </CategoryBoxHeader>\r\n            <CategoryRow style={{ justifyContent: 'flex-start' }}>\r\n                {categories.map((category) => (\r\n                    <Category onClick={handleClick} color={category.color}>\r\n                        {category.name}\r\n                    </Category>\r\n                ))}\r\n            </CategoryRow>\r\n            <CategoryRow style={{ justifyContent: 'flex-end' }}>\r\n                <Category onClick={handleClick}>Clear Selection</Category>\r\n            </CategoryRow>\r\n        </CategoryBoxContainer>\r\n    );\r\n};\r\n\r\nexport default CategoryBox;\r\n","export const projectData = [\r\n    {\r\n        title: 'SoundTube',\r\n        description: `SoundTube is a social media and music sharing website.`,\r\n        categories: [\r\n            { name: 'HTML', color: '#e44d26' },\r\n            { name: 'CSS', color: '#264de4;' },\r\n            { name: 'JavaScript', color: '#264de4;' },\r\n            { name: 'Express', color: '' },\r\n            { name: 'JSON', color: '#466df4' },\r\n            { name: 'MySQL', color: '#47809d' },\r\n            { name: 'Node.js', color: '#70a761' },\r\n        ],\r\n        post: 'soundtube',\r\n    },\r\n    {\r\n        title: 'TypeScript MERN To Do Application',\r\n        description: `A to do application created in Typescript using the MERN Stack.`,\r\n        categories: [\r\n            { name: 'HTML', color: '#e44d26' },\r\n            { name: 'CSS', color: '#264de4;' },\r\n            { name: 'JavaScript', color: '#264de4;' },\r\n            { name: 'TypeScript', color: '#3178c6' },\r\n            { name: 'MongoDB', color: '#e58f14' },\r\n            { name: 'Express', color: '' },\r\n            { name: 'React', color: '#61dafb' },\r\n            { name: 'Node.js', color: '#70a761' },\r\n        ],\r\n        post: 'todo',\r\n    },\r\n    {\r\n        title: 'World of Tanks TypeScript API Wrapper (WIP)',\r\n        description: `A wrapper for WarGaming's API in TypeScript`,\r\n        categories: [\r\n            { name: 'TypeScript', color: '#3178c6' },\r\n            { name: 'Node.js', color: '#70a761' },\r\n        ],\r\n        post: 'world-of-tanks-api',\r\n    },\r\n    {\r\n        title: 'Docstring Generator',\r\n        description: `A Visual Studio Code extension for generating docstrings.`,\r\n        categories: [\r\n            { name: 'TypeScript', color: '#3178c6' },\r\n            { name: 'Node.js', color: '#70a761' },\r\n        ],\r\n        post: 'docstring-generator',\r\n    },\r\n    {\r\n        title: 'Manga Downloader',\r\n        description: `Search for and download the latest manga through command line.`,\r\n        categories: [{ name: 'Python', color: '#61dafb' }],\r\n        post: 'manga-downloader',\r\n    },\r\n    {\r\n        title: 'Bank System',\r\n        description: `A bank GUI that supports basic banking features built using NetBeans GUI Builder.`,\r\n        categories: [\r\n            { name: 'Java', color: '#e58f14' },\r\n            { name: 'Software GUI', color: '' },\r\n        ],\r\n        post: 'bank-system',\r\n    },\r\n];\r\n\r\nexport const getCategories = (): { name: string; color: string }[] => {\r\n    let categories: { name: string; color: string }[] = [];\r\n\r\n    // Create an array containing every category\r\n    for (const project of projectData) {\r\n        categories = categories.concat(project.categories);\r\n    }\r\n\r\n    return Object.values(\r\n        categories.reduce(\r\n            (acc, cur) => Object.assign(acc, { [cur.name]: cur }),\r\n            {}\r\n        )\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/seo';\r\nimport Layout from '../components/layout';\r\nimport Project from '../components/project';\r\nimport CategoryBox from '../components/category-box';\r\n\r\nimport { projectData, getCategories } from '../data/projects';\r\n\r\nconst ProjectHeader = styled.h1`\r\n    margin: 0 auto 10px;\r\n    padding: 5px;\r\n    overflow: hidden;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\nconst ProjectDescription = styled.h3`\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n    margin: 0 auto 10px;\r\n\r\n    @media screen and (max-width: 420px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\nconst ProjectContainer = styled.section`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media screen and (max-width: 720px) {\r\n        margin: 0 auto;\r\n        max-width: 400px;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nconst Projects = () => {\r\n    const [projects, setProjects] = useState(projectData);\r\n    const categories = getCategories();\r\n\r\n    const filterProjects = (category: string | null) => {\r\n        if (category === null) {\r\n            setProjects(projectData);\r\n            return projectData;\r\n        }\r\n\r\n        const filteredProjects = [];\r\n        projectData.map((project) => {\r\n            let matchesCategory = false;\r\n            for (const projectCategory of project.categories) {\r\n                if (projectCategory.name === category) matchesCategory = true;\r\n            }\r\n            if (matchesCategory) filteredProjects.push(project);\r\n        });\r\n\r\n        setProjects(filteredProjects);\r\n        return filterProjects;\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO />\r\n            <ProjectHeader>Projects</ProjectHeader>\r\n            <ProjectDescription>\r\n                Here is a list of all the projects I have created (so far)!\r\n            </ProjectDescription>\r\n            <ProjectDescription style={{ fontWeight: 'bold' }}>\r\n                Click on a project for more information\r\n            </ProjectDescription>\r\n            <CategoryBox\r\n                categories={categories}\r\n                filterProjects={filterProjects}\r\n            />\r\n            <ProjectContainer>\r\n                {projects.map((projectInfo) => (\r\n                    <Project key={projectInfo.title} {...projectInfo} />\r\n                ))}\r\n            </ProjectContainer>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}